name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  python-quality:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Python ${{ matrix.python-version }} 설정
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: 의존성 설치
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install ruff mypy bandit pytest pytest-asyncio pytest-cov
          
      - name: Ruff 린트
        run: ruff check .
        
      - name: Mypy 타입 검사
        run: mypy codex_wrapper.py --strict
        
      - name: Bandit 보안 검사
        run: bandit -r . -ll
        
      - name: 단위 테스트 (커버리지)
        run: |
          pytest tests/ \
            --cov=codex_wrapper \
            --cov-report=xml \
            --cov-report=term \
            --cov-fail-under=80
          
      - name: 커버리지 리포트 업로드
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml
          
      - name: Codecov 업로드
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
          verbose: true
          
      - name: pip-audit 보안 스캔
        uses: pypa/gh-action-pip-audit@v1.0.8
        with:
          inputs: requirements.txt
          
      - name: Snyk 취약점 스캔
        uses: snyk/actions/python-3.13@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor

  docker-airflow:
    runs-on: ubuntu-latest
    needs: [python-quality]
    services:
      docker:
        image: docker:24.0.6-dind
        privileged: true
        
    steps:
      - uses: actions/checkout@v4
      
      - name: Docker Compose 설정
        run: |
          docker compose up -d airflow
          sleep 30  # Airflow 웹서버 시작 대기
          
      - name: DAG 파싱 테스트
        run: |
          docker exec airflow airflow dags list
          
      - name: DAG 단위 테스트
        run: |
          docker exec airflow python -m pytest /opt/airflow/tests/dags/
          
      - name: Trivy 컨테이너 스캔
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'apache/airflow:slim-3.0.1-python3.12'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [docker-airflow]
    steps:
      - uses: actions/checkout@v4
      
      - name: 버전 추출
        id: version
        run: echo "::set-output name=version::$(cat VERSION)"
        
      - name: GitHub Release 생성
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
